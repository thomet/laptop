#!/usr/bin/env bash
### end common-components/bash-shebang

# Welcome to the thoughtbot laptop script! Be prepared to turn your laptop (or
# desktop, no haters here) into an awesome development machine.

# This file is auto-generated. Do not edit it by hand unless you know what
# you're doing. Please see 'CONTRIBUTING.md' for more information.
### end common-components/header

fancy_echo() {
  local fmt="$1"; shift

  # shellcheck disable=SC2059
  printf "\n$fmt\n" "$@"
}

append_to_zshrc() {
  local text="$1" zshrc
  local skip_new_line="${2:-0}"

  if [ -w "$HOME/.zshrc.local" ]; then
    zshrc="$HOME/.zshrc.local"
  else
    zshrc="$HOME/.zshrc"
  fi

  if ! grep -Fqs "$text" "$zshrc"; then
    if [ "$skip_new_line" -eq 1 ]; then
      printf "%s\n" "$text" >> "$zshrc"
    else
      printf "\n%s\n" "$text" >> "$zshrc"
    fi
  fi
}
### end common-components/shared-functions

trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e
### end common-components/exit-trap

if [[ ! -d "$HOME/.bin/" ]]; then
  mkdir "$HOME/.bin"
fi

if [ ! -f "$HOME/.zshrc" ]; then
  touch $HOME/.zshrc
fi

append_to_zshrc 'export PATH="$HOME/.bin:$PATH"'
### end common-components/check-home-bin

case "$SHELL" in
  */zsh) : ;;
  *)
    fancy_echo "Changing your shell to zsh ..."
      chsh -s "$(which zsh)"
    ;;
esac
### end common-components/zsh

brew_cask_install() {
  fancy_echo "Installing %s ..." "$1"
  brew cask install "$@"
}

brew_install_or_upgrade() {
  if brew_is_installed "$1"; then
    if brew_is_upgradable "$1"; then
      fancy_echo "Upgrading %s ..." "$1"
      brew upgrade "$@"
    else
      fancy_echo "Already using the latest version of %s. Skipping ..." "$1"
    fi
  else
    fancy_echo "Installing %s ..." "$1"
    brew install "$@"
  fi
}

brew_is_installed() {
  local name="$(brew_expand_alias "$1")"

  brew list -1 | grep -Fqx "$name"
}

brew_is_upgradable() {
  local name="$(brew_expand_alias "$1")"

  ! brew outdated --quiet "$name" >/dev/null
}

brew_tap() {
  brew tap "$1" 2> /dev/null
}

brew_expand_alias() {
  brew info "$1" 2>/dev/null | head -1 | awk '{gsub(/:/, ""); print $1}'
}

brew_launchctl_restart() {
  local name="$(brew_expand_alias "$1")"
  local domain="homebrew.mxcl.$name"
  local plist="$domain.plist"

  fancy_echo "Restarting %s ..." "$1"
  mkdir -p "$HOME/Library/LaunchAgents"
  ln -sfv "/usr/local/opt/$name/$plist" "$HOME/Library/LaunchAgents"

  if launchctl list | grep -Fq "$domain"; then
    launchctl unload "$HOME/Library/LaunchAgents/$plist" >/dev/null
  fi
  launchctl load "$HOME/Library/LaunchAgents/$plist" >/dev/null
}

gem_install_or_update() {
  if gem list "$1" --installed > /dev/null; then
    fancy_echo "Updating %s ..." "$1"
    gem update "$@"
  else
    fancy_echo "Installing %s ..." "$1"
    gem install "$@"
    rbenv rehash
  fi
}
### end mac-components/mac-functions

fancy_echo "Installing oh-my-zsh ..."
  curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh
### end common-components/oh-my-zsh

fancy_echo "Installing janus (vim) ..."
  if [ -d ~/.vim ]
  then
    echo "\033[0;33mYou already have One Vim Directory.\033[0m You'll need to remove  ~/.vim if you want to clone"
  else
    curl -Lo- https://bit.ly/janus-bootstrap | bash
  fi
### end common-components/janus-vim

if [[ -f /etc/zshenv ]]; then
  fancy_echo "Fixing OSX zsh environment bug ..."
    sudo mv /etc/{zshenv,zshrc}
fi
### end mac-components/zsh-fix

if ! command -v brew >/dev/null; then
  fancy_echo "Installing Homebrew ..."
    curl -fsS \
      'https://raw.githubusercontent.com/Homebrew/install/master/install' | ruby

    append_to_zshrc '# recommended by brew doctor'

    # shellcheck disable=SC2016
    append_to_zshrc 'export PATH="/usr/local/bin:$PATH"' 1

    export PATH="/usr/local/bin:$PATH"
else
  fancy_echo "Homebrew already installed. Skipping ..."
fi

fancy_echo "Updating Homebrew formulas ..."
  brew update

fancy_echo "Add Hombrew old versions support ..."
  brew_tap 'homebrew/versions'
### end mac-components/homebrew

fancy_echo "Installing Cask, 'To install, drag this icon...' no more!"
  brew tap caskroom/cask
  brew install brew-cask
### end mac-components/cask

brew_install_or_upgrade 'zsh'
brew_install_or_upgrade 'git'
brew_install_or_upgrade 'mysql56'
brew_install_or_upgrade 'redis'
brew_install_or_upgrade 'the_silver_searcher'
brew_install_or_upgrade 'vim'
brew_install_or_upgrade 'ctags'
brew_install_or_upgrade 'tmux'
brew_install_or_upgrade 'imagemagick'
brew_install_or_upgrade 'qt'

node_version="0.10.28"

fancy_echo "Installing NVM, Node.js, and NPM, for running apps and installing JavaScript packages ..."
  brew_install_or_upgrade 'nvm'

  if ! grep -qs 'source $(brew --prefix nvm)/nvm.sh' ~/.zshrc; then
    printf 'export PATH="$PATH:/usr/local/lib/node_modules"\n' >> ~/.zshrc
    printf 'source $(brew --prefix nvm)/nvm.sh\n' >> ~/.zshrc
  fi

  source $(brew --prefix nvm)/nvm.sh
  nvm install "$node_version"

  fancy_echo "Setting $node_version as the global default nodejs..."
  nvm alias default "$node_version"

brew_cask_install 'iterm2'
brew_cask_install 'atom'
brew_cask_install 'caffeine'
brew_cask_install 'google-chrome'
brew_cask_install 'firefox'
brew_cask_install 'jumpcut'
brew_cask_install 'slack'
brew_cask_install 'spectacle'
brew_cask_install 'textmate'
### end mac-components/packages

brew_launchctl_restart 'mysql56'
brew_launchctl_restart 'redis'
### end mac-components/start-services

fancy_echo "Installing rvm, to change Ruby versions ..."
  curl -sSL https://get.rvm.io | bash
  source ~/.rvm/scripts/rvm
### end common-components/rvm

brew_install_or_upgrade 'openssl'
brew unlink openssl && brew link openssl --force
### end mac-components/compiler-and-libraries

fancy_echo "Installing Ruby ..."
  rvm install ruby
  rvm --default use ruby

fancy_echo "Updating to latest Rubygems version ..."
  gem update --system

fancy_echo "Installing Bundler to install project-specific Ruby gems ..."
  gem install bundler --no-document --pre
### end common-components/ruby-environment

fancy_echo "Configuring Bundler for faster, parallel gem installation ..."
  number_of_cores=$(sysctl -n hw.ncpu)
  bundle config --global jobs $((number_of_cores - 1))
### end mac-components/bundler

### end common-components/default-gems

if ! command -v rcup &>/dev/null; then
  brew_tap 'thoughtbot/formulae'
  brew_install_or_upgrade 'rcm'
fi
### end mac-components/rcm

if [[ -f ~/.laptop.local ]]; then
  source ~/.laptop.local
fi
### end common-components/personal-additions

